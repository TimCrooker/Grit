"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[668],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,k=u["".concat(p,".").concat(m)]||u[m]||c[m]||l;return n?i.createElement(k,a(a({ref:t},d),{},{components:n})):i.createElement(k,a({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,a[1]=o;for(var s=2;s<l;s++)a[s]=n[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6134:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return d},default:function(){return u}});var i=n(3117),r=n(102),l=(n(7294),n(3905)),a=["components"],o={},p="Generator Context",s={unversionedId:"generator-file/generator-instance",id:"generator-file/generator-instance",title:"Generator Context",description:"The generator instance is availiable in methods of the generator file passed as a context parameter which gives you access to all of the following properties and methods.",source:"@site/docs/generator-file/generator-instance.md",sourceDirName:"generator-file",slug:"/generator-file/generator-instance",permalink:"/Grit/docs/generator-file/generator-instance",editUrl:"https://github.com/TimCrooker/Grit/edit/master/docs/docs/generator-file/generator-instance.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Completed",permalink:"/Grit/docs/generator-file/completed"}},d=[{value:"Properties",id:"properties",children:[{value:"<code>answers</code>",id:"answers",children:[],level:3},{value:"<code>data</code>",id:"data",children:[],level:3},{value:"<code>pkg</code>",id:"pkg",children:[],level:3},{value:"<code>generatorPkg</code>",id:"generatorpkg",children:[],level:3},{value:"<code>gritPkg</code>",id:"gritpkg",children:[],level:3},{value:"<code>gitUser</code>",id:"gituser",children:[],level:3},{value:"<code>projectName</code>",id:"projectname",children:[],level:3},{value:"<code>templateDirPath</code>",id:"templatedirpath",children:[],level:3},{value:"<code>outDir</code>",id:"outdir",children:[],level:3},{value:"<code>npmClient</code>",id:"npmclient",children:[],level:3},{value:"<code>logger</code>",id:"logger",children:[],level:3},{value:"<code>spinner</code>",id:"spinner",children:[],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"<code>gitInit()</code>",id:"gitinit",children:[],level:3},{value:"<code>async gitCommit()</code>",id:"async-gitcommit",children:[],level:3},{value:"<code>async npmInstall()</code>",id:"async-npminstall",children:[],level:3},{value:"<code>async runScript()</code>",id:"async-runscript",children:[],level:3},{value:"<code>showProjectTips()</code>",id:"showprojecttips",children:[],level:3},{value:"<code>createError()</code>",id:"createerror",children:[],level:3}],level:2},{value:"Testing Methods",id:"testing-methods",children:[{value:"<code>async getOutputFiles()</code>",id:"async-getoutputfiles",children:[],level:3},{value:"<code>async hasOutputFile()</code>",id:"async-hasoutputfile",children:[],level:3},{value:"<code>async readOutputFile()</code>",id:"async-readoutputfile",children:[],level:3}],level:2}],c={toc:d};function u(e){var t=e.components,n=(0,r.Z)(e,a);return(0,l.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"generator-context"},"Generator Context"),(0,l.kt)("p",null,"The generator instance is availiable in methods of the generator file passed as a context parameter which gives you access to all of the following properties and methods."),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"answers"},(0,l.kt)("inlineCode",{parentName:"h3"},"answers")),(0,l.kt)("p",null,"The answers to prompts. Cannot be accessing inside of ",(0,l.kt)("inlineCode",{parentName:"p"},"prompts")," in the generator."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"{[k: string]: any | undefined}"))),(0,l.kt)("h3",{id:"data"},(0,l.kt)("inlineCode",{parentName:"h3"},"data")),(0,l.kt)("p",null,"A merged object combining the answers and any data returned from the ",(0,l.kt)("a",{parentName:"p",href:"generator-file/data"},"data method")," of generator"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"{[k: string]: any | undefined}"))),(0,l.kt)("h3",{id:"pkg"},(0,l.kt)("inlineCode",{parentName:"h3"},"pkg")),(0,l.kt)("p",null,"Read the contents of the ",(0,l.kt)("inlineCode",{parentName:"p"},"package.json")," file from the output directory. Will return undefined if it does not exist"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"{[k: string]: any | undefined}"))),(0,l.kt)("h3",{id:"generatorpkg"},(0,l.kt)("inlineCode",{parentName:"h3"},"generatorPkg")),(0,l.kt)("p",null,"Read the contents of the ",(0,l.kt)("inlineCode",{parentName:"p"},"package.json")," file from the generator itself. Will return undefined if it does not exist"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"{[k: string]: any | undefined}"))),(0,l.kt)("h3",{id:"gritpkg"},(0,l.kt)("inlineCode",{parentName:"h3"},"gritPkg")),(0,l.kt)("p",null,"Read the contents of the ",(0,l.kt)("inlineCode",{parentName:"p"},"package.json")," file from Grit"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"{[k: string]: any}"))),(0,l.kt)("h3",{id:"gituser"},(0,l.kt)("inlineCode",{parentName:"h3"},"gitUser")),(0,l.kt)("p",null,"The machines global git user config"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"{name: string, username: string, email: string}"))),(0,l.kt)("h3",{id:"projectname"},(0,l.kt)("inlineCode",{parentName:"h3"},"projectName")),(0,l.kt)("p",null,"The basename of the output directory"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"templatedirpath"},(0,l.kt)("inlineCode",{parentName:"h3"},"templateDirPath")),(0,l.kt)("p",null,"The path to the generators template directory."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"outdir"},(0,l.kt)("inlineCode",{parentName:"h3"},"outDir")),(0,l.kt)("p",null,"The absolute path to the output directory"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"npmclient"},(0,l.kt)("inlineCode",{parentName:"h3"},"npmClient")),(0,l.kt)("p",null,"The users npm client"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"npm | yarn"))),(0,l.kt)("h3",{id:"logger"},(0,l.kt)("inlineCode",{parentName:"h3"},"logger")),(0,l.kt)("p",null,"The logger instance for logging messages to the user with useful features"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/TimCrooker/swaglog"},"Ora"))),(0,l.kt)("p",null,"see the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/TimCrooker/swaglog"},"Swaglog docs")," to learn more about using the logger (its super simple)"),(0,l.kt)("h3",{id:"spinner"},(0,l.kt)("inlineCode",{parentName:"h3"},"spinner")),(0,l.kt)("p",null,"The spinner instance"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/sindresorhus/ora"},"Ora"))),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"gitinit"},(0,l.kt)("inlineCode",{parentName:"h3"},"gitInit()")),(0,l.kt)("p",null,"Run ",(0,l.kt)("inlineCode",{parentName:"p"},"git init")," in the output directory"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"() => void"))),(0,l.kt)("h3",{id:"async-gitcommit"},(0,l.kt)("inlineCode",{parentName:"h3"},"async gitCommit()")),(0,l.kt)("p",null,"Run ",(0,l.kt)("inlineCode",{parentName:"p"},"git Commit -m '[message]'")," in the output directory"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"(commitMessage?: string) => Promise<void>"))),(0,l.kt)("h3",{id:"async-npminstall"},(0,l.kt)("inlineCode",{parentName:"h3"},"async npmInstall()")),(0,l.kt)("p",null,"Installs dependencies in the output directory with preferred npm client"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"InstallPackages"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"type InstallPackages = (opts: InstallOptions) => Promise<{ code: number }>\n\ninterface InstallOptions {\n /** Install directory */\n cwd: string\n /** Package manager being used */\n npmClient?: NPM_CLIENT\n /** Package manager install CLI options */\n installArgs?: string[]\n /** Names of additional packages to install */\n packages?: string[]\n /** Run install as devDependencies */\n saveDev?: boolean\n registry?: string\n}\n")),(0,l.kt)("h3",{id:"async-runscript"},(0,l.kt)("inlineCode",{parentName:"h3"},"async runScript()")),(0,l.kt)("p",null,"Runs an npm script in the output directories package.json file"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"RunScript"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"type RunScript = (opts: RunNpmScriptOptions) => Promise<void>\n\ninterface RunNpmScriptOptions {\n /** the path to the directory commands will run in*/\n cwd?: string\n /** name of script from package.json to run */\n script: string\n /** Package manager being used */\n npmClient?: NPM_CLIENT\n /** Argunemets to be appended to the command line */\n args?: string[]\n}\n")),(0,l.kt)("h3",{id:"showprojecttips"},(0,l.kt)("inlineCode",{parentName:"h3"},"showProjectTips()")),(0,l.kt)("p",null,"Show the user a success message"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"() => void"))),(0,l.kt)("h3",{id:"createerror"},(0,l.kt)("inlineCode",{parentName:"h3"},"createError()")),(0,l.kt)("p",null,"Throw errors more elegantly with better logging of the error stack"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"(message: string) => GritError"))),(0,l.kt)("h2",{id:"testing-methods"},"Testing Methods"),(0,l.kt)("p",null,"These methods are meant for use in testing environments to assert against the generators output but can also be used in the generator config if you would like."),(0,l.kt)("h3",{id:"async-getoutputfiles"},(0,l.kt)("inlineCode",{parentName:"h3"},"async getOutputFiles()")),(0,l.kt)("p",null,"Get a list of the files in the output directory"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"() => Promise<string[]>"))),(0,l.kt)("h3",{id:"async-hasoutputfile"},(0,l.kt)("inlineCode",{parentName:"h3"},"async hasOutputFile()")),(0,l.kt)("p",null,"Check if a specific file exists in the output directory"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"(file: string) => Promise<boolean>"))),(0,l.kt)("h3",{id:"async-readoutputfile"},(0,l.kt)("inlineCode",{parentName:"h3"},"async readOutputFile()")),(0,l.kt)("p",null,"Get the stringified content of a specific file in the output directory"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"(file: string) => Promise<string>"))))}u.isMDXComponent=!0}}]);